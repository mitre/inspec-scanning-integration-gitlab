.ci:stage:kitchen-exec:inspec:
  image:
    name: $REGISTRY/ci/inspec-kitchen-dev:$INSPEC_PIPELINE_TAG
    entrypoint: [""]
  variables:
    CHEF_LICENSE: 'accept-silent'
  stage: validate
  before_script:
    - export CI_JOB_TIMESTAMP=$(date --utc --iso-8601=seconds)
  script:
    # Set region for AWS calls
    # - export AWS_DEFAULT_REGION=us-gov-west-1

    # Currently the pipeline setup injects AWS creds used in other executions
    # However on the Sandbox runner the IAM Instance profile creds has used.
    # unsetting the pipeline creds to use IAM Instance profile creds 
    - unset AWS_SECRET_ACCESS_KEY
    - unset AWS_ACCESS_KEY_ID
    # Echoing out the Inspec version for this run.
    - echo "Using Inspec Version - $(inspec version)"

    # Create temporary ssh keys for test instances
    - ssh-keygen -f ssh_key -t ecdsa -b 521 -C "" -m PEM -N ""

    # Create user data script content to upload the ssh pub key to test instance
    - ruby /opt/prepare_user_data.rb /opt/user_data.sh.erb ./ssh_key.pub user_data.sh
    
    # Does the profile have gem dependencies? If so, use bundle to make sure they
    # are respected
    - if [ -f "./Gemfile" ]; then

        bundle install;

        if [ "$DEBUG" = 'true' ]; then
          bundle exec kitchen list || true;
          bundle exec kitchen create || true;
          bundle exec kitchen converge || true;
          bundle exec kitchen verify || true;
          bundle exec kitchen destroy || true;
        else
          bundle exec kitchen test --destroy=always || true;
        fi
      else
        if [ "$DEBUG" = 'true' ]; then
          kitchen list || true;
          kitchen create || true;
          kitchen converge || true;
          kitchen verify || true;
          kitchen destroy || true;
        else
          kitchen test --destroy=always || true;
        fi
      fi

  allow_failure: false
  tags:
  - sandbox
  artifacts:
    name: "$CI_JOB_NAME"
    when: always
    expire_in: 1 month
    paths:
    - $CI_PROJECT_DIR/reports/raw/*.json
