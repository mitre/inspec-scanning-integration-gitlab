stages:
  - download
  - build

download_artifacts:
  image:
    name: $REGISTRY/ci/curl:7.75.0
    entrypoint: [""]
  stage: download
  script:
    - 'curl -sSL https://rep.dsolab.io/repository/raw-hosted/pipeline_writer/0.2.5/writer -o writer'
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/writer

build_images:
  image: rep.dsolab.io:5004/docker:19.03.12
  services:
    - rep.dsolab.io:5004/docker:19.03.12-dind
  stage: build
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
  before_script:
    - echo "SCV Docker(s) Image Creation."
  script:
    # Docker Login to rep.dsolab.io
    - docker login rep.dsolab.io:5003 -u 'admin' -p "${CW_PW2}"

    # copy writer application to build directories
    - cp writer $CI_PROJECT_DIR/dockerfiles/cookstyle
    - cp writer $CI_PROJECT_DIR/dockerfiles/inspec/

    # Build and tag images
    - docker build -t rep.dsolab.io:5003/ci/cook-dev:$CI_COMMIT_SHORT_SHA $CI_PROJECT_DIR/dockerfiles/cookstyle/
    - docker build -t rep.dsolab.io:5003/ci/inspec-dev:$CI_COMMIT_SHORT_SHA $CI_PROJECT_DIR/dockerfiles/inspec/
    - docker build -t rep.dsolab.io:5003/ci/rust-dev:$CI_COMMIT_SHORT_SHA $CI_PROJECT_DIR/dockerfiles/rust/
    - docker build -t rep.dsolab.io:5003/ci/sync:$CI_COMMIT_SHORT_SHA $CI_PROJECT_DIR/dockerfiles/sync/

    # Push all newly generated Docker images
    - docker image push rep.dsolab.io:5003/ci/cook-dev:$CI_COMMIT_SHORT_SHA
    - docker image push rep.dsolab.io:5003/ci/inspec-dev:$CI_COMMIT_SHORT_SHA
    - docker image push rep.dsolab.io:5003/ci/rust-dev:$CI_COMMIT_SHORT_SHA
    - docker image push rep.dsolab.io:5003/ci/sync:$CI_COMMIT_SHORT_SHA
  dependencies:
    - download_artifacts
